{"ast":null,"code":"var _jsxFileName = \"/home/hamed/Documents/fsd/part1/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; // 2 ways to define function\n// 1st fucntion declaration\n\nfunction dec() {\n  return null;\n} // 2nd function expression\n\n\nconst exp = function () {\n  return null;\n}; // storing a method reference in a variable \n// ** calling the method through a reference, the method loses knowledge of what was the original this\n// ** When calling the method through a reference the value of this becomes the so-called global object\n// https://fullstackopen.com/en/part1/java_script#functions\n\n\nconst referenceToFun = exp; // object -- Object literals\n\nconst firstObj = {\n  code: 'js',\n  version: 10,\n  otherCode: {\n    backend: 'nodejs',\n    framework: 'react'\n  }\n}; // add properties to the object\n// firstObj.otherCode.framework['angular']\n\nconst FindName = pp => {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, \"My name is \", pp.name, \" and I'm \", pp.age, \" years old!\");\n};\n\nconst Myapp = () => {\n  // console.log(\"something\")\n  // const now=new Date();\n  return (\n    /*#__PURE__*/\n    // <div>\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Hello, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }), \"customer name.\"), /*#__PURE__*/React.createElement(FindName, {\n      name: \"HGH\",\n      age: \"34\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(MapList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    })) // </div>\n\n  );\n}; // map \n\n\nconst marr = [1, 2, 3];\nconst nmarr = marr.map(val => val * 2); // console.log(nmarr)\n\nconst MapList = () => {\n  return marr.map(value => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, \"  \", value, \"  \"));\n}; //concat array\n\n\nconst farr = [1, 2];\nconst sarr = [3, 4];\nconst tarr = farr.concat(sarr); // console.log('concat is '+tarr)\n// destructuring assignment \n\nconst destruct = [1, 2, 3, 40, 50];\nconst [f, s, ...restof] = destruct; // console.log(f,s)\n// console.log(restof)\n\nconst Hello = prop => {\n  const {\n    name,\n    age\n  } = prop;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, \"Hello \", name, \" you are \", age));\n};\n\nconst R = p => {\n  const {\n    r\n  } = p;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, \" \", r, \" \");\n};\n\nlet rr = 123;\n\nconst Application = () => {\n  const name = 'hgh';\n  const age = 34;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Hello, {\n    name: \"hgh2\",\n    age: 35,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Hello, {\n    name: name,\n    age: age,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }));\n}; // const refresh=()=>ReactDOM.render(\n//   <React.StrictMode>\n//     <R r={rr} />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n// setInterval((callback)=>{\n//   refresh()\n//   rr+=10\n// },1000)\n\n\nconst TestState = () => {\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 6\n    }\n  }, \"you click \", count, \" times\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setCount = () => useState += 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, \"click me\"));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(TestState, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/hamed/Documents/fsd/part1/src/index.js"],"names":["React","useState","ReactDOM","App","serviceWorker","dec","exp","referenceToFun","firstObj","code","version","otherCode","backend","framework","FindName","pp","name","age","Myapp","marr","nmarr","map","val","MapList","value","farr","sarr","tarr","concat","destruct","f","s","restof","Hello","prop","R","p","r","rr","Application","TestState","count","setCount","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;AACA;;AACA,SAASC,GAAT,GAAc;AACZ,SAAO,IAAP;AACD,C,CACD;;;AACA,MAAMC,GAAG,GAAC,YAAU;AAClB,SAAO,IAAP;AACD,CAFD,C,CAGA;AACA;AACA;AACA;;;AACA,MAAMC,cAAc,GAACD,GAArB,C,CAEA;;AACA,MAAME,QAAQ,GAAC;AACbC,EAAAA,IAAI,EAAC,IADQ;AAEbC,EAAAA,OAAO,EAAC,EAFK;AAGbC,EAAAA,SAAS,EAAC;AACRC,IAAAA,OAAO,EAAC,QADA;AAERC,IAAAA,SAAS,EAAC;AAFF;AAHG,CAAf,C,CAQA;AACA;;AAGA,MAAMC,QAAQ,GAAEC,EAAD,IAAM;AACnB,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeA,EAAE,CAACC,IAAlB,eAAiCD,EAAE,CAACE,GAApC,gBADA;AAGD,CAJD;;AAQA,MAAMC,KAAK,GAAC,MAAI;AACd;AACA;AAEA;AAAA;AACE;AACA,2DACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,mBADA,eAKA,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,eAMA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CAFF,CAUA;;AAVA;AAYD,CAhBD,C,CAkBA;;;AACA,MAAMC,IAAI,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAX;AACA,MAAMC,KAAK,GAACD,IAAI,CAACE,GAAL,CAASC,GAAG,IAAEA,GAAG,GAAC,CAAlB,CAAZ,C,CACA;;AACA,MAAMC,OAAO,GAAC,MAAI;AAChB,SAAQJ,IAAI,CAACE,GAAL,CAASG,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,KAAP,OAAlB,CAAR;AAED,CAHD,C,CAKA;;;AACA,MAAMC,IAAI,GAAC,CAAC,CAAD,EAAG,CAAH,CAAX;AACA,MAAMC,IAAI,GAAC,CAAC,CAAD,EAAG,CAAH,CAAX;AACA,MAAMC,IAAI,GAACF,IAAI,CAACG,MAAL,CAAYF,IAAZ,CAAX,C,CACA;AAEA;;AACA,MAAMG,QAAQ,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,EAAP,EAAU,EAAV,CAAf;AACA,MAAM,CAACC,CAAD,EAAGC,CAAH,EAAM,GAAGC,MAAT,IAAiBH,QAAvB,C,CACA;AACA;;AAIA,MAAMI,KAAK,GAAEC,IAAD,IAAQ;AAClB,QAAM;AAAClB,IAAAA,IAAD;AAAQC,IAAAA;AAAR,MAAaiB,IAAnB;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSlB,IADT,eACwBC,GADxB,CADA,CADF;AAOD,CATD;;AAaA,MAAMkB,CAAC,GAAEC,CAAD,IAAK;AACX,QAAM;AAACC,IAAAA;AAAD,MAAID,CAAV;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOC,CAAP,MADF;AAGD,CALD;;AAOA,IAAIC,EAAE,GAAG,GAAT;;AAEA,MAAMC,WAAW,GAAC,MAAI;AACpB,QAAMvB,IAAI,GAAC,KAAX;AACA,QAAMC,GAAG,GAAC,EAAV;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,GAAG,EAAEC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA,MAAMuB,SAAS,GAAC,MAAI;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBzC,QAAQ,CAAC,CAAD,CAAhC;AACA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWwC,KADX,WADF,eAIG;AAAQ,IAAA,OAAO,EAAGC,QAAQ,GAAC,MAAKzC,QAAQ,IAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJH,CADD;AAUD,CAZD;;AAcAC,QAAQ,CAACyC,MAAT,eACA,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADA,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAQA;AACA;AACA;;AACAzC,aAAa,CAAC0C,UAAd","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// 2 ways to define function\n// 1st fucntion declaration\nfunction dec(){\n  return null\n}\n// 2nd function expression\nconst exp=function(){\n  return null\n}\n// storing a method reference in a variable \n// ** calling the method through a reference, the method loses knowledge of what was the original this\n// ** When calling the method through a reference the value of this becomes the so-called global object\n// https://fullstackopen.com/en/part1/java_script#functions\nconst referenceToFun=exp\n\n// object -- Object literals\nconst firstObj={\n  code:'js',\n  version:10,\n  otherCode:{\n    backend:'nodejs',\n    framework:'react'\n  }\n}\n// add properties to the object\n// firstObj.otherCode.framework['angular']\n\n\nconst FindName=(pp)=>{\n  return(\n  <p>My name is {pp.name} and I'm {pp.age} years old!</p>\n  )\n}\n\n\n\nconst Myapp=()=>{\n  // console.log(\"something\")\n  // const now=new Date();\n  \n  return(\n    // <div>\n    <>\n    <p>\n    <Hello/>  \n      customer name.\n    </p>\n    <FindName name='HGH' age='34'/>\n    <MapList/>\n    </>\n  // </div>\n  )\n}\n\n// map \nconst marr=[1,2,3]\nconst nmarr=marr.map(val=>val*2)\n// console.log(nmarr)\nconst MapList=()=>{\n  return (marr.map(value => <li>  {value}  </li>)\n  )\n}\n\n//concat array\nconst farr=[1,2]\nconst sarr=[3,4]\nconst tarr=farr.concat(sarr)\n// console.log('concat is '+tarr)\n\n// destructuring assignment \nconst destruct=[1,2,3,40,50]\nconst [f,s, ...restof]=destruct\n// console.log(f,s)\n// console.log(restof)\n\n\n\nconst Hello=(prop)=>{\n  const {name , age}=prop\n  return(\n    <div>\n    <p>\n      Hello {name} you are {age}\n    </p>\n  </div>\n  )\n}\n\n\n\nconst R=(p)=>{\n  const {r}=p\n  return(\n    <div> {r} </div>\n  )\n}\n\nlet rr = 123\n\nconst Application=()=>{\n  const name='hgh'\n  const age=34\n  return(\n    <div>\n      <Hello name='hgh2' age={35} />\n      <Hello name={name} age={age}/>\n    </div>\n  )\n}\n\n// const refresh=()=>ReactDOM.render(\n//   <React.StrictMode>\n//     <R r={rr} />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// setInterval((callback)=>{\n//   refresh()\n//   rr+=10\n// },1000)\n\n\nconst TestState=()=>{\n  const [count, setCount]=useState(0);\n  return(\n   <div>\n     <p>\n     you click {count} times \n      </p>\n      <button onClick={(setCount=()=> useState+=1  )} >\n        click me\n      </button>\n   </div> \n  )\n}\n\nReactDOM.render(\n<React.StrictMode>\n    <TestState/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"]},"metadata":{},"sourceType":"module"}